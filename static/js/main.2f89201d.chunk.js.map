{"version":3,"sources":["images/profile.png","images/iphone.png","images/instar1.png","images/instar2.png","images/instar3.png","images/board1.png","images/board2.png","Components/Layouts/Footer.js","Components/Login/NotLogged.js","pages/Login.js","Components/Layouts/Header.js","Components/Home/Comments.js","Components/Home/Board.js","Components/Home/Logged.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","WrapFooter","styled","footer","Footer","WrapLogin","div","ImageSlider","WrapInfo","WrapForm","form","FacebookLogin","a","Register","WrapInstallBtn","NotLogged","onSubmit","useState","change","setChange","useEffect","setInterval","firstImg","document","querySelector","currentImg","classList","remove","nextImg","nextElementSibling","add","changeImg","clearInterval","src","image","alt","phoneImg1","className","phoneImg2","phoneImg3","type","placeholder","to","Login","style","textAlign","e","preventDefault","window","location","href","Headers","header","Logo","Nav","nav","NavItems","NavProfile","ul","props","disPlay","SearchInput","input","WrapImage","Header","profileImg","setDisPlay","size","onClick","CommentsIcons","BoardLike","CommentsId","CommentsUsers","Comment","CommentsBoard","Comments","fill","color","like","setLike","counter","likeCounter","setLikeCounter","message","save","setSave","text","user","setInput","comment","setComment","showComments","setShowComments","length","slice","map","index","key","onChange","target","value","concat","alert","WrapBoard","SliderIcons","BoardContents","BoardCreator","BoardImg","Board","boardImg1","boardImg2","WrapContent","WrapWidth","Logged","Home","App","path","exact","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.2f89201d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.a6058672.png\";","module.exports = __webpack_public_path__ + \"static/media/iphone.11e111ed.png\";","module.exports = __webpack_public_path__ + \"static/media/instar1.52067335.png\";","module.exports = __webpack_public_path__ + \"static/media/instar2.6bc06340.png\";","module.exports = __webpack_public_path__ + \"static/media/instar3.4a6cf337.png\";","module.exports = __webpack_public_path__ + \"static/media/board1.78f9b4c2.png\";","module.exports = __webpack_public_path__ + \"static/media/board2.576cc2e8.png\";","import styled from \"styled-components\";\r\nimport React from \"react\";\r\n\r\nconst WrapFooter = styled.footer`\r\n  display: flex;\r\n  padding: 1em;\r\n  align-items: center;\r\n  margin-bottom: 1.1em;\r\n  justify-content: center;\r\n  @media (max-width: 800px) {\r\n    flex-direction: column;\r\n    padding: 0;\r\n    margin-top: -3em;\r\n    li {\r\n      margin-bottom: 0.3em;\r\n    }\r\n  }\r\n  li {\r\n    list-style: none;\r\n    margin-right: 1em;\r\n    font-size: small;\r\n    cursor: pointer;\r\n    color: #00376b;\r\n  }\r\n  span {\r\n    color: #8e8e8e;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <WrapFooter>\r\n        <li>소개</li>\r\n        <li>도움말</li>\r\n        <li>API</li>\r\n        <li>약관</li>\r\n        <li>위치</li>\r\n        <li>언어</li>\r\n        <li>해시태그</li>\r\n        <span>\r\n          <small>& 2020 INSTARGURAM FROM FACEBOOK</small>\r\n        </span>\r\n      </WrapFooter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import Footer from \"../Layouts/Footer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport image from \"../../images/iphone.png\";\r\nimport phoneImg1 from \"../../images/instar1.png\";\r\nimport phoneImg2 from \"../../images/instar2.png\";\r\nimport phoneImg3 from \"../../images/instar3.png\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst WrapLogin = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  min-height: 800px;\r\n  img {\r\n    height: 420px;\r\n    width: 412px;\r\n    margin-bottom: 5em;\r\n    position: relative;\r\n    @media (max-width: 800px) {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ImageSlider = styled.div`\r\n  position: relative;\r\n  top: -12.125em;\r\n  left: -23.64em;\r\n  background: white;\r\n  img {\r\n    position: absolute;\r\n    width: 181px;\r\n    height: 311px;\r\n    transition: all 1000ms;\r\n    opacity: 0;\r\n    &.showing {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst WrapInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst WrapForm = styled.form`\r\n  border: 1px solid #dbdbdb;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  padding: 0.7em;\r\n  min-width: 350px;\r\n  min-height: 380px;\r\n  background: white;\r\n  h2 {\r\n    padding: 1.5em;\r\n    font-size: 2rem;\r\n  }\r\n  input {\r\n    padding: 0.8em;\r\n    width: 250px;\r\n    margin: 0 auto;\r\n    margin-bottom: 1em;\r\n    border: 1px solid #dbdbdb;\r\n  }\r\n  button {\r\n    margin-top: 0.3em;\r\n    width: 220px;\r\n    background: #0095f6;\r\n    padding: 0.5em 1em;\r\n    color: white;\r\n    font-weight: bold;\r\n    border-radius: 8px;\r\n  }\r\n  span {\r\n    margin-top: 1em;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  a {\r\n    margin: 0.6em 0;\r\n  }\r\n`;\r\n\r\nconst FacebookLogin = styled.a`\r\n  color: #385185;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Register = styled.div`\r\n  width: 350px;\r\n  border: 1px solid #dbdbdb;\r\n  background: white;\r\n  margin: 1em 0;\r\n  padding: 1.4em;\r\n  display: flex;\r\n  justify-content: center;\r\n  span {\r\n    margin-left: 0.3em;\r\n    padding: 1.4em;\r\n    color: #0095f6;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst WrapInstallBtn = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 1em;\r\n  button {\r\n    width: 100px;\r\n    padding: 0.8em;\r\n    margin: 0 0.4em;\r\n    background: black;\r\n    border-radius: 8px;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nexport default function NotLogged({ onSubmit }) {\r\n  const [change, setChange] = useState(false);\r\n\r\n  const changeImg = () => {\r\n    const firstImg = document.querySelector(\".img:first-child\");\r\n    const currentImg = document.querySelector(\".showing\");\r\n    if (currentImg) {\r\n      currentImg.classList.remove(\"showing\");\r\n      const nextImg = currentImg.nextElementSibling;\r\n      if (nextImg) nextImg.classList.add(\"showing\");\r\n      else firstImg.classList.add(\"showing\");\r\n    } else firstImg.classList.add(\"showing\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      setChange(true);\r\n      changeImg();\r\n    }, 3500);\r\n    return () => {\r\n      clearInterval();\r\n    };\r\n  }, [change]);\r\n\r\n  return (\r\n    <>\r\n      <WrapLogin>\r\n        <img src={image} alt=\"bg\" />\r\n        <ImageSlider>\r\n          <img src={phoneImg1} className=\"img showing\" alt=\"bg\" />\r\n          <img src={phoneImg2} className=\"img\" alt=\"bg\" />\r\n          <img src={phoneImg3} className=\"img\" alt=\"bg\" />\r\n        </ImageSlider>\r\n\r\n        <WrapInfo>\r\n          <WrapForm onSubmit={onSubmit}>\r\n            <h2>Instarguram</h2>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"전화번호, 사용자 이름 또는 이메일\"\r\n            ></input>\r\n            <input type=\"text\" placeholder=\"비밀번호\"></input>\r\n            <button type=\"submit\">로그인</button>\r\n            <span>또는</span>\r\n            <Link to=\"#\">\r\n              <FacebookLogin>Facebook으로 로그인</FacebookLogin>\r\n            </Link>\r\n            <Link to=\"#\">\r\n              <small>비밀번호를 잊으셨나요?</small>\r\n            </Link>\r\n          </WrapForm>\r\n          <Register>\r\n            <h4>계정이 없으신가요?</h4>\r\n            <span>가입하기</span>\r\n          </Register>\r\n          <h5>앱을 다운로드 하세요.</h5>\r\n          <WrapInstallBtn>\r\n            <button>AppStore</button>\r\n            <button>GooglePlay</button>\r\n          </WrapInstallBtn>\r\n        </WrapInfo>\r\n      </WrapLogin>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","// import Logged from \"../Components/Home/Logged\";\r\nimport React from \"react\";\r\nimport NotLogged from \"../Components/Login/NotLogged\";\r\n\r\nexport const Login = () => {\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    window.location.href = \"/home\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* 유저 로그인 여부에 따른 렌더링 페이지 */}\r\n      {/* <Logged /> */}\r\n      <h2 style={{ textAlign: \"center\" }}>\r\n        로그인을 클릭하시면 로그인 된 페이지로 이동합니다\r\n      </h2>\r\n      <NotLogged onSubmit={onSubmit} />\r\n    </>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport React, { useState } from \"react\";\r\nimport { FiHome, FiHeart, FiFlag, FiSettings } from \"react-icons/fi\";\r\nimport { AiOutlineMessage } from \"react-icons/ai\";\r\nimport { ImCompass2 } from \"react-icons/im\";\r\nimport { CgProfile } from \"react-icons/cg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Headers = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  position: fixed;\r\n  width: 100%;\r\n  left: 50%;\r\n  top: 0;\r\n  transform: translateX(-50%);\r\n  padding: 0.8em;\r\n  max-width: 1200px;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst NavItems = styled.div`\r\n  margin: 0 0.8em;\r\n  cursor: pointer;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst NavProfile = styled.ul`\r\n  position: absolute;\r\n  top: 60px;\r\n  height: 140px;\r\n  right: 2%;\r\n  width: 23%;\r\n  box-shadow: 0.3px 0.3px 2px 1px #dbdbdb;\r\n  background: white;\r\n  display: ${(props) => (props.disPlay ? \"none\" : \"block\")};\r\n  p {\r\n    padding-left: 0.5em;\r\n  }\r\n  & > li {\r\n    padding: 0.5em;\r\n    font-size: 0.8rem;\r\n    display: flex;\r\n    &:hover {\r\n      background-color: rgba(0, 0, 0, 0.1);\r\n    }\r\n  }\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  padding: 0.3em 1.2em;\r\n  flex: 1;\r\n  text-align: center;\r\n  outline: none;\r\n  border: 1px solid #dbdbdb;\r\n  &:focus {\r\n    text-align: left;\r\n    padding-left: 0.3em;\r\n  }\r\n`;\r\n\r\nconst WrapImage = styled.div`\r\n  width: 26px;\r\n  height: 26px;\r\n  border-radius: 50%;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nexport default function Header({ profileImg }) {\r\n  const [disPlay, setDisPlay] = useState(true);\r\n  const onClick = () => {\r\n    disPlay ? setDisPlay(false) : setDisPlay(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Headers>\r\n        <Logo>Instarguram</Logo>\r\n        <div>\r\n          <SearchInput type=\"text\" placeholder=\"검색\" />\r\n        </div>\r\n        <Nav>\r\n          <NavItems>\r\n            <Link to=\"/\">\r\n              <FiHome size={26} />\r\n            </Link>\r\n          </NavItems>\r\n          <NavItems>\r\n            <Link to=\"#\">\r\n              <AiOutlineMessage size={26} />\r\n            </Link>\r\n          </NavItems>\r\n          <NavItems>\r\n            <Link to=\"#\">\r\n              <ImCompass2 size={26} />\r\n            </Link>\r\n          </NavItems>\r\n          <NavItems>\r\n            <FiHeart size={26} />\r\n          </NavItems>\r\n          <NavItems>\r\n            <WrapImage>\r\n              <img src={profileImg} alt=\"Profile\" onClick={onClick} />\r\n            </WrapImage>\r\n            <NavProfile disPlay={disPlay}>\r\n              <li>\r\n                <CgProfile size={18} />\r\n                <p>프로필</p>\r\n              </li>\r\n              <li>\r\n                <FiFlag size={18} />\r\n                <p>저장됨</p>\r\n              </li>\r\n              <li>\r\n                <FiSettings size={18} />\r\n                <p>설정</p>\r\n              </li>\r\n              <hr />\r\n              <p>로그아웃</p>\r\n            </NavProfile>\r\n          </NavItems>\r\n        </Nav>\r\n      </Headers>\r\n    </>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport { FiHeart, FiFlag, FiMessageCircle } from \"react-icons/fi\";\r\nimport { AiOutlineMessage } from \"react-icons/ai\";\r\nimport styled from \"styled-components\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst CommentsIcons = styled.div`\r\n  padding: 0.5em 1em;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  svg {\r\n    cursor: pointer;\r\n    margin-right: 0.3em;\r\n  }\r\n`;\r\n\r\nconst BoardLike = styled.div`\r\n  padding: 0.5em 1em;\r\n  font-weight: bold;\r\n  font-size: small;\r\n`;\r\n\r\nconst CommentsId = styled.div`\r\n  padding: 0.5em 1em;\r\n  & > small {\r\n    font-weight: bold;\r\n  }\r\n  span {\r\n    margin-left: 0.5em;\r\n  }\r\n`;\r\n\r\nconst CommentsUsers = styled.div`\r\n  padding: 0.5em 1em;\r\n  & > small:nth-child(1) {\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n    color: #8e8e8e;\r\n  }\r\n`;\r\n\r\nconst Comment = styled.div`\r\n  margin-top: 0.5em;\r\n  margin-bottom: 0.5em;\r\n  display: block;\r\n  div {\r\n    margin-bottom: 0.4em;\r\n    strong {\r\n      margin-right: 0.8em;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CommentsBoard = styled.form`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-top: 1px solid #dbdbdb;\r\n  width: 100%;\r\n  padding: 0.5em 1em;\r\n  input {\r\n    all: unset;\r\n    padding: 0.5em 1em 0.5em 0;\r\n  }\r\n  & > input:nth-child(1) {\r\n    width: 70%;\r\n  }\r\n  & > input:nth-child(2) {\r\n    color: blue;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default function Comments() {\r\n  // 좋아요 관리\r\n  const [like, setLike] = useState({ fill: \"\", color: \"\" });\r\n  const [likeCounter, setLikeCounter] = useState({ counter: 0 });\r\n  const { counter } = likeCounter;\r\n\r\n  const onClickLike = () => {\r\n    const { fill } = like;\r\n    if (!fill) {\r\n      setLike({ ...like, fill: \"red\", color: \"red\" });\r\n      setLikeCounter({ ...likeCounter, counter: counter + 1 });\r\n    } else {\r\n      setLike({\r\n        ...like,\r\n        fill: \"\",\r\n        color: \"\",\r\n      });\r\n      setLikeCounter({ ...likeCounter, counter: counter - 1 });\r\n    }\r\n  };\r\n\r\n  // 저장 관리\r\n  const [save, setSave] = useState({ fill: \"\", message: \"\" });\r\n  const onClickSave = () => {\r\n    const { fill } = save;\r\n    if (!fill) setSave({ ...save, fill: \"black\", message: \"저장됨\" });\r\n    else setSave({ ...save, fill: \"\", message: \"\" });\r\n  };\r\n\r\n  // 코멘트 기능 관리\r\n  const [input, setInput] = useState({ text: \"\", user: \"\" });\r\n  const [comment, setComment] = useState([\r\n    { user: \"아이디\", text: \"댓글을 입력해 보세요!\" },\r\n  ]);\r\n\r\n  const { text, user } = input;\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    comment.length > 4 && setShowComments(false);\r\n    text !== \"\"\r\n      ? setComment(comment.concat({ user, text }))\r\n      : alert(\"댓글을 입력하세요.\");\r\n    setInput({ ...input, text: \"\" });\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setInput({ ...input, text: e.target.value, user: \"아이디\" });\r\n  };\r\n\r\n  const onClickComments = (e) => {\r\n    comment.slice(0, comment.length);\r\n    showComments ? setShowComments(false) : setShowComments(true);\r\n  };\r\n\r\n  const [showComments, setShowComments] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (comment.length > 4) {\r\n      return setShowComments(false);\r\n    } else return;\r\n  }, [comment]);\r\n\r\n  return (\r\n    <>\r\n      <CommentsIcons>\r\n        <div>\r\n          <FiHeart style={like} onClick={onClickLike} size={26} />\r\n          <Link to=\"#\">\r\n            <FiMessageCircle size={26} />\r\n          </Link>\r\n          <Link to=\"#\">\r\n            <AiOutlineMessage size={26} />\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          <FiFlag style={save} onClick={onClickSave} size={26} />\r\n          {\r\n            save.message && <div>저장됨</div>\r\n            // 알림 메시지로 바꿀 것\r\n          }\r\n        </div>\r\n      </CommentsIcons>\r\n      {counter ? <BoardLike>좋아요 {counter}명 </BoardLike> : <> </>}\r\n\r\n      <CommentsId>\r\n        <small>chkim116</small>\r\n        <span>\r\n          <small>Good Morning</small>\r\n        </span>\r\n      </CommentsId>\r\n      <CommentsUsers>\r\n        {comment.length > 4 && (\r\n          <small onClick={onClickComments}>\r\n            댓글 {comment.length}개 모두 보기\r\n          </small>\r\n        )}\r\n        <Comment>\r\n          {!showComments ? (\r\n            <div>\r\n              <small>\r\n                <strong>{comment.slice(-1)[0].user}</strong>\r\n                <small>{comment.slice(-1)[0].text}</small>\r\n              </small>\r\n            </div>\r\n          ) : (\r\n            comment.map((text, index) => (\r\n              <div key={index}>\r\n                <small>\r\n                  <strong>{text.user}</strong>\r\n                  <small>{text.text}</small>\r\n                </small>\r\n              </div>\r\n            ))\r\n          )}\r\n        </Comment>\r\n      </CommentsUsers>\r\n      <CommentsBoard onChange={onChange} onSubmit={onSubmit}>\r\n        <input type=\"text\" placeholder=\"댓글 달기...\" value={text} />\r\n        <input type=\"submit\" value=\"게시\" />\r\n      </CommentsBoard>\r\n    </>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport Comments from \"./Comments\";\r\nimport React from \"react\";\r\n\r\nconst WrapBoard = styled.div`\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  margin-top: 2em;\r\n`;\r\n\r\nconst SliderIcons = styled.div`\r\n  border: 1px solid #dbdbdb;\r\n  margin: 1em;\r\n  height: 118px;\r\n  display: flex;\r\n  flex-wrap: no-wrap;\r\n  padding: 1.3em 1em;\r\n  overflow: hidden;\r\n  div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-right: 1em;\r\n    img {\r\n      border: 2px solid #dd4183;\r\n      width: 66px;\r\n      padding: 0.13em;\r\n      border-radius: 50%;\r\n      cursor: pointer;\r\n      height: 66px;\r\n    }\r\n    small {\r\n      text-align: center;\r\n      margin-top: 0.7em;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BoardContents = styled.div`\r\n  margin: 1em;\r\n  border: 1px solid #dbdbdb;\r\n  margin-bottom: 5em;\r\n`;\r\n\r\nconst BoardCreator = styled.div`\r\n  border-bottom: 1px solid #dbdbdb;\r\n  padding: 1.3em;\r\n  position: relative;\r\n  display: flex;\r\n  span {\r\n    line-height: 35px;\r\n  }\r\n  span:nth-child(3) {\r\n    position: absolute;\r\n    right: 3%;\r\n    top: 10px;\r\n    font-size: 1.5rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst WrapImage = styled.div`\r\n  width: 35px;\r\n  height: 35px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nconst BoardImg = styled.div`\r\n  width: 100%;\r\n  border-bottom: 1px solid #dbdbdb;\r\n  height: 614px;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport default function Board({ profileImg, boardImg1, boardImg2 }) {\r\n  return (\r\n    <WrapBoard>\r\n      <SliderIcons>\r\n        <div>\r\n          <img src={profileImg} alt=\"SliderImg\" />\r\n          <small>chkim116</small>\r\n        </div>\r\n        <div>\r\n          <img src={profileImg} alt=\"SliderImg\" />\r\n          <small>chkim116</small>\r\n        </div>\r\n        <div>\r\n          <img src={profileImg} alt=\"SliderImg\" />\r\n          <small>chkim116</small>\r\n        </div>\r\n        <div>\r\n          <img src={profileImg} alt=\"SliderImg\" />\r\n          <small>chkim116</small>\r\n        </div>\r\n        <div>\r\n          <img src={profileImg} alt=\"SliderImg\" />\r\n          <small>chkim116</small>\r\n        </div>\r\n        <div>\r\n          <img src={profileImg} alt=\"SliderImg\" />\r\n          <small>chkim116</small>\r\n        </div>\r\n        <div>\r\n          <img src={profileImg} alt=\"SliderImg\" />\r\n          <small>chkim116</small>\r\n        </div>\r\n        <div>\r\n          <img src={profileImg} alt=\"SliderImg\" />\r\n          <small>chkim116</small>\r\n        </div>\r\n        <div>\r\n          <img src={profileImg} alt=\"SliderImg\" />\r\n          <small>chkim116</small>\r\n        </div>\r\n      </SliderIcons>\r\n      {/* 이미지 슬라이더는 다음에 */}\r\n      <BoardContents>\r\n        <BoardCreator>\r\n          <WrapImage>\r\n            <img src={profileImg} alt=\"CreatorImg\" />\r\n          </WrapImage>\r\n          <span>chkim116</span>\r\n          <span>...</span>\r\n        </BoardCreator>\r\n        <BoardImg>\r\n          <img src={profileImg} alt=\"MainImg\" />\r\n        </BoardImg>\r\n        <Comments />\r\n      </BoardContents>\r\n\r\n      <BoardContents>\r\n        <BoardCreator>\r\n          <WrapImage>\r\n            <img src={boardImg1} alt=\"CreatorImg\" />\r\n          </WrapImage>\r\n          <span>chkim116</span>\r\n          <span>...</span>\r\n        </BoardCreator>\r\n        <BoardImg>\r\n          <img src={boardImg1} alt=\"MainImg\" />\r\n        </BoardImg>\r\n        <Comments />\r\n      </BoardContents>\r\n\r\n      <BoardContents>\r\n        <BoardCreator>\r\n          <WrapImage>\r\n            <img src={boardImg2} alt=\"CreatorImg\" />\r\n          </WrapImage>\r\n          <span>chkim116</span>\r\n          <span>...</span>\r\n        </BoardCreator>\r\n        <BoardImg>\r\n          <img src={boardImg2} alt=\"MainImg\" />\r\n        </BoardImg>\r\n        <Comments />\r\n      </BoardContents>\r\n    </WrapBoard>\r\n  );\r\n}\r\n","import Header from \"../Layouts/Header\";\r\nimport React from \"react\";\r\nimport Board from \"./Board\";\r\nimport styled from \"styled-components\";\r\nimport profileImg from \"../../images/profile.png\";\r\nimport boardImg1 from \"../../images/board1.png\";\r\nimport boardImg2 from \"../../images/board2.png\";\r\n\r\nconst WrapContent = styled.div`\r\n  width: 100%;\r\n  position: fixed;\r\n  height: 54px;\r\n  border-bottom: 1px solid #dbdbdb;\r\n  top: 0;\r\n  background: #ffffff;\r\n`;\r\n\r\nconst WrapWidth = styled.div`\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  margin-top: 100px;\r\n`;\r\n\r\nexport default function Logged() {\r\n  return (\r\n    <>\r\n      <WrapContent>\r\n        <Header profileImg={profileImg} />\r\n      </WrapContent>\r\n      <WrapWidth>\r\n        <Board\r\n          profileImg={profileImg}\r\n          boardImg1={boardImg1}\r\n          boardImg2={boardImg2}\r\n        />\r\n      </WrapWidth>\r\n      <hr />\r\n    </>\r\n  );\r\n}\r\n","import Logged from \"../Components/Home/Logged\";\r\nimport React from \"react\";\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <>\r\n      <Logged />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { Login } from \"./pages/Login\";\r\nimport { Home } from \"./pages/Home\";\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact={true} component={Login} />\r\n      <Route path=\"/home\" component={Home} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}